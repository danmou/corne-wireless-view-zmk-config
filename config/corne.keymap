/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    behaviors {
        bhm: balanced_homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <150>;// <---[[moderate duration]]
            quick-tap-ms = <0>;
            flavor = "balanced";
            bindings =
                <&kp>,
                <&kp>;
        };
        danish_or: danish_or {
            compatible = "zmk,behavior-hold-tap";
            label = "DANISH_OR";
            bindings =
                <&danish>,
                <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <150>;
            quick-tap-ms = <0>;
            flavor = "balanced";
        };
    };

    macros {
        danish: danish {
            compatible = "zmk,behavior-macro";
            label = "DANISH";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&mo 1 &kp CAPS>,
                <&macro_pause_for_release>,
                <&macro_release>,
                <&mo 1 &kp CAPS>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {

            bindings = <
 &kp PLUS        &kp Q         &kp W             &kp E          &kp R        &kp T        &kp Y          &kp U        &kp I         &kp O           &kp P   &kp PIPE
  &kp ESC  &bhm LGUI A  &bhm LCTRL S       &bhm LALT D  &bhm LSHIFT F        &kp G        &kp H  &bhm RSHIFT J  &bhm LALT K  &bhm RCTRL L  &bhm RGUI SEMI  &kp EQUAL
&kp MINUS        &kp Z         &kp X             &kp C          &kp V        &kp B        &kp N          &kp M    &kp COMMA       &kp DOT        &kp FSLH  &kp UNDER
                                      &danish_or 0 TAB       &kp BSPC  &lt 3 SPACE    &lt 2 RET        &kp SQT    &kp GRAVE
            >;
        };

        danish {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans     &trans  &kp LBKT
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans     &trans   &kp SQT
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &kp EQUAL  &kp RBKT
                        &trans  &trans  &trans    &trans  &trans  &trans
            >;
        };

        lower_layer {

            bindings = <
&trans            &kp F1             &kp F2              &kp F3                &kp F4        &kp F5      &kp F6            &kp F7        &kp F8            &kp F9        &kp F10  &trans
&trans  &bhm LGUI C_PREV  &bhm LCTRL C_NEXT  &bhm LALT C_VOL_DN  &bhm LSHIFT C_VOL_UP      &kp C_PP    &kp LEFT  &bhm RSHIFT DOWN  &bhm LALT UP  &bhm RCTRL RIGHT  &bhm RGUI F11  &trans
&trans      &bt BT_SEL 0       &bt BT_SEL 1        &bt BT_SEL 2          &bt BT_SEL 3  &bt BT_SEL 4      &trans            &trans        &trans            &trans        &kp F12  &trans
                                                       &kp LGUI                &trans     &kp SPACE     &kp RET            &trans      &kp RALT
            >;
        };

        raise_layer {

            bindings = <
&trans      &kp EXCL         &kp AT      &kp HASH        &kp DLLR  &kp PRCNT    &kp CARET        &kp AMPS  &kp KP_MULTIPLY       &kp LPAR      &kp RPAR     &trans
&trans  &bhm LGUI N1  &bhm LCTRL N2  &bhm LALT N3  &bhm LSHIFT N4     &kp N5       &kp N6  &bhm RSHIFT N7     &bhm LALT N8  &bhm RCTRL N9  &bhm RGUI N0     &trans
&trans       &kp ESC       &kp PLUS     &kp MINUS       &kp EQUAL  &kp UNDER     &kp LBKT        &kp RBKT         &kp BSLH       &kp LBRC      &kp RBRC  &kp TILDE
                                           &trans          &trans     &trans       &trans          &trans           &trans
            >;
        };
    };
};
