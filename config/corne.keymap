/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    behaviors {
        bhm: balanced_homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <200>;// <---[[moderate duration]]
            quick-tap-ms = <125>;
            flavor = "balanced";
            bindings = <&kp>, <&kp>;

            global-quick-tap;
        };

        danish_or: danish_or {
            compatible = "zmk,behavior-hold-tap";
            label = "DANISH_OR";
            bindings = <&danish>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <0>;
            flavor = "balanced";
        };
    };

    macros {
        danish: danish {
            compatible = "zmk,behavior-macro";
            label = "DANISH";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&mo 1 &kp CAPS>,
                <&macro_pause_for_release>,
                <&macro_release>,
                <&mo 1 &kp CAPS>;

            wait-ms = <10>;
        };

        toggle_danish: toggle_danish {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LG(SPACE) &tog 1>;
            label = "TOGGLE_DANISH";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp PLUS   &kp Q        &kp W         &kp E             &kp R          &kp T       &kp Y    &kp U          &kp I        &kp O         &kp P           &kp BACKSLASH
&kp MINUS  &bhm LGUI A  &bhm LCTRL S  &bhm LALT D       &bhm LSHIFT F  &kp G       &kp H    &bhm RSHIFT J  &bhm LALT K  &bhm RCTRL L  &bhm RGUI SEMI  &kp EQUAL
&kp ESC    &kp Z        &kp X         &kp C             &kp V          &kp B       &kp N    &kp M          &kp COMMA    &kp DOT       &kp FSLH        &kp GRAVE
                                      &danish_or 0 TAB  &lt 2 SPACE    &kp BSPC    &kp SQT  &lt 3 RET      &kp UNDER
            >;
        };

        danish {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans     &kp LBKT
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans     &kp SQT
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &kp EQUAL  &kp RBKT
                        &trans  &trans  &trans    &trans  &trans  &trans
            >;
        };

        raise_layer {
            bindings = <
&trans  &kp EXCL      &kp AT         &kp HASH      &kp DLLR        &kp PRCNT    &kp CARET  &kp AMPS        &kp ASTERISK  &kp LPAR       &kp RPAR       &kp PIPE
&trans  &bhm LGUI N1  &bhm LCTRL N2  &bhm LALT N3  &bhm LSHIFT N4  &kp N5       &kp N6     &bhm RSHIFT N7  &bhm LALT N8  &bhm RCTRL N9  &bhm RGUI N0   &kp PLUS
&trans  &kp PIPE      &kp PLUS       &kp MINUS     &kp EQUAL       &kp UNDER    &kp LBKT   &kp RBKT        &kp LBRC      &kp RBRC       &kp BACKSLASH  &kp TILDE
                                     &trans        &kp SPACE       &kp DEL      &trans     &kp ENTER       &kp ESC
            >;
        };

        lower_layer {
            bindings = <
&kp C_BRI_INC  &kp F1           &kp F2             &kp F3            &kp F4                 &kp F5              &kp F6    &kp F7     &kp F8     &kp F9     &kp F10        &kp C_VOL_UP
&kp C_BRI_DN   &bhm LGUI PSCRN  &bhm LCTRL INSERT  &bhm LALT SYSREQ  &bhm LSHIFT C_AC_BACK  &kp C_AC_FORWARD    &kp LEFT  &kp DOWN   &kp UP     &kp RIGHT  &bhm RGUI F11  &kp C_VOL_DN
&bt BT_CLR     &bt BT_SEL 0     &bt BT_SEL 1       &bt BT_SEL 2      &bt BT_SEL 3           &bt BT_SEL 4        &kp HOME  &kp PG_DN  &kp PG_UP  &kp END    &kp F12        &kp C_MUTE
                                                   &toggle_danish    &trans                 &kp DELETE          &trans    &trans     &kp ESC
            >;
        };
    };
};
